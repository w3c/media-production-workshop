WEBVTT

1
00:05.400 --> 00:06.233
<v Steve>Hello and welcome</v>

2
00:06.233 --> 00:08.400
to the production metaverse.

3
00:08.400 --> 00:09.490
Today, we're gonna walk through,

4
00:09.490 --> 00:11.400
what is the production metaverse?

5
00:11.400 --> 00:14.330
How is metadata used to orchestrate the pipeline

6
00:14.330 --> 00:16.120
of a studio and a production?

7
00:16.120 --> 00:18.310
What are some of the unique challenges?

8
00:18.310 --> 00:19.930
And how is it used in a virtual production

9
00:19.930 --> 00:22.800
across these studios?

10-p
00:22.800 --> 00:24.837
Just to start off with some of the foundation

11
00:24.837 --> 00:27.180
of what a production process looks like,

12
00:27.180 --> 00:30.730
it really starts with a script, the foundation of the story.

13
00:30.730 --> 00:32.480
From there you build out research,

14
00:32.480 --> 00:34.500
where you're pulling images from the web,

15
00:34.500 --> 00:36.335
you're building unique pieces of content

16
00:36.335 --> 00:38.668
with storyboards and concept art,

17
00:38.668 --> 00:41.250
you're doing scouting and location photos

18
00:41.250 --> 00:42.550
from around the world,

19
00:42.550 --> 00:45.770
set design with architectural drawings,

20
00:45.770 --> 00:48.470
casting with a whole range of other content.

21-p
00:48.470 --> 00:50.831
Then as you go into shooting, you're gonna be capturing

22
00:50.831 --> 00:54.290
all sorts of different resolutions at high frame rates,

23
00:54.290 --> 00:56.500
and potentially multiple cameras

24
00:56.500 --> 00:59.700
across multiple units in multiple locations.

25
00:59.700 --> 01:01.374
It's not uncommon for a production to generate

26
01:01.374 --> 01:04.160
hundreds of terabytes, if not petabytes,

27
01:04.160 --> 01:05.650
in a number of months,

28
01:05.650 --> 01:08.401
and require that all of that content be uploaded

29
01:08.401 --> 01:12.220
into the cloud, distributed out to multiple vendors,

30
01:12.220 --> 01:15.900
all working on that content in different ways

31
01:15.900 --> 01:16.500
and at different phases,

32
01:16.500 --> 01:19.320
and different needs for the production process.

33-p
01:19.320 --> 01:21.540
Editorial will then cut that all together

34
01:21.540 --> 01:25.390
and connect all those VFX vendors and all those VFX layers

35
01:25.390 --> 01:27.230
and elements that come together,

36
01:27.230 --> 01:29.376
and all the while feeding the marketing machine

37
01:29.376 --> 01:33.190
and the licensing machine up into the studio.

38-p
01:33.190 --> 01:36.760
As I said, the foundation really starts with the script.

39
01:36.760 --> 01:39.260
And what's interesting is a script is a structured document,

40
01:39.260 --> 01:42.870
you have scenes on the left, exterior, interior,

41
01:42.870 --> 01:46.960
day/night labels, story locations, characters, et cetera,

42
01:46.960 --> 01:49.600
all consistently structured in this document.

43-p
01:49.600 --> 01:52.100
Taking that foundation as we expand out

44
01:52.100 --> 01:54.220
from the story location into, say,

45
01:54.220 --> 01:59.220
the physical location of where is that set going to be a shot,

46
01:59.478 --> 02:04.478
or are they going to create it in a particular stage?

47
02:04.670 --> 02:07.770
You also have virtual elements with sequences and shots,

48
02:07.770 --> 02:11.560
so how's the visual effects department going to break down

49
02:11.560 --> 02:14.380
the information, and how does this all connect together

50
02:14.380 --> 02:16.503
into this actual production metaverse?

51-p
02:17.900 --> 02:19.260
Even going deeper into VFX,

52
02:19.260 --> 02:21.980
if you take, say, a particular shot,

53
02:21.980 --> 02:25.480
it's broken up into hundreds, if not thousands, of frames,

54
02:25.480 --> 02:28.530
and there's layers to those frames,

55
02:28.530 --> 02:30.940
maybe a foreground plate or a background plate.

56
02:30.940 --> 02:33.250
That foreground plate could be made up of models

57
02:33.250 --> 02:35.600
and rigs and textures,

58
02:35.600 --> 02:37.500
and combined with footage to come together

59
02:37.500 --> 02:40.853
just to create a couple of seconds of a beautiful image.

60-p
02:42.630 --> 02:43.910
And as an example,

61
02:43.910 --> 02:46.420
we could use maybe a foreground plate of a guy on a horse.

62
02:46.420 --> 02:49.629
Whack in a background layer, some smoke and some people

63
02:49.629 --> 02:53.540
and fire, I'll light it, color it,

64
02:53.540 --> 02:55.160
and you get this beautiful image.

65
02:55.160 --> 02:57.760
So if you can think of that happening thousands,

66
02:57.760 --> 03:00.568
if not tens of thousands of times across all of these

67
03:00.568 --> 03:04.720
millions of frames, thousands of shots and

68
03:04.720 --> 03:07.497
distributed globally to create this one piece of content

69
03:07.497 --> 03:10.223
and surrounding articles.

70-p
03:11.400 --> 03:14.800
So what's important is you get a consistent framework of how

71
03:14.800 --> 03:16.220
to structure that information from the file metadata,

72
03:16.220 --> 03:19.990
to how the files are structured within assets,

73
03:19.990 --> 03:22.890
the connective tissue of how a character is connected

74
03:22.890 --> 03:27.190
to an actor, leveraging AI analysis for automation of that

75
03:27.190 --> 03:28.550
as much as possible,

76
03:28.550 --> 03:31.650
connecting a shot to a vendor through external databases

77
03:31.650 --> 03:35.963
like File Maker, Ftrack or a Shotgun database.

78-p
03:36.850 --> 03:39.170
How you pull in the pillars from all different phases

79
03:39.170 --> 03:41.990
of production from casting and pre-production

80
03:41.990 --> 03:46.990
to camera on set, to the editorial of post and the archive,

81
03:47.800 --> 03:50.712
all the way into the metaverse and into entities.

82-p
03:50.712 --> 03:54.000
So we leverage all this data to orchestrate the pipeline

83
03:54.000 --> 03:57.562
of status changes and triggering events for transcodes

84
03:57.562 --> 04:00.310
and file transfers with different applications

85
04:00.310 --> 04:03.810
in different events, all in the need of moving this data

86
04:03.810 --> 04:06.948
as fast as possible to give creatives as much time

87
04:06.948 --> 04:10.270
to make those decisions before they hit that deadline.

88-p
04:10.270 --> 04:12.700
That's one interesting thing about production

89
04:12.700 --> 04:13.656
is you've got a release date

90
04:13.656 --> 04:15.640
and the goal is how can you create

91
04:15.640 --> 04:18.182
the greatest film possible in that amount of time?

92
04:18.182 --> 04:22.618
So functionally our role is to help facilitate

93
04:22.618 --> 04:25.770
the orchestration, the speed of decisions,

94
04:25.770 --> 04:28.823
and creative flow as much as possible.

95-p
04:30.100 --> 04:32.100
And so some of the key challenges that we find through

96
04:32.100 --> 04:34.853
browsers is things like dealing with big file sizes

97
04:34.853 --> 04:38.302
and the need for UDP acceleration of large file

98
04:38.302 --> 04:41.870
transfers distributed globally around the world.

99
04:41.870 --> 04:42.630
When you've gotta be uploading

100
04:42.630 --> 04:45.530
many terabytes overnight, and it's required to be delivered

101
04:45.530 --> 04:48.300
in a location for that next artist

102
04:48.300 --> 04:50.800
to work on it, you just really need the robustness

103
04:50.800 --> 04:53.661
of commonly used tools like (?) and Asignet

104
04:53.661 --> 04:56.560
but to be able to get native support in the browser

105
04:56.560 --> 04:57.393
would be amazing.

106-p
04:57.393 --> 05:00.320
Upload folders, uploading folders, of course,

107
05:00.320 --> 05:02.295
many challenges there in a browser right now,

108
05:02.295 --> 05:06.393
you know, structured files, like a model

109
05:06.393 --> 05:08.900
that has a certain relationship to a rig

110
05:08.900 --> 05:11.780
and a texture maintaining those structures,

111
05:11.780 --> 05:14.850
commonly requires people to zip things up

112
05:14.850 --> 05:17.763
and then have them decompress on upload.

113-p
05:18.610 --> 05:21.350
Those robust transfers across a long haul, you know,

114
05:21.350 --> 05:23.350
globally distributed teams where you're shooting

115
05:23.350 --> 05:25.590
in New Zealand and your post house is in LA

116
05:25.590 --> 05:28.700
and VFX  house is in the UK, et cetera,

117
05:28.700 --> 05:31.428
just being able to move data really fast is required,

118
05:31.428 --> 05:34.948
especially on location, the idea of sort of drop zones

119
05:34.948 --> 05:38.260
of how do you find that, a big pipe to get the data

120
05:38.260 --> 05:40.480
to where you need as fast as possible.

121-p
05:40.480 --> 05:43.310
And we also see a lot of duplication of files.

122
05:43.310 --> 05:44.760
You know, if there was the possibility

123
05:44.760 --> 05:46.120
of a client-side checksum

124
05:46.120 --> 05:49.340
where you would get a computable, a fingerprint,

125
05:49.340 --> 05:51.259
to realize you've already got that file in your system,

126
05:51.259 --> 05:54.500
because we're moving so many files around

127
05:54.500 --> 05:55.350
in different locations,

128
05:55.350 --> 05:59.183
just to be able to exchange a common hash,

129
05:59.183 --> 06:02.180
would just allow for a lot faster transfers

130
06:02.180 --> 06:04.523
without duplicate data.

131-p
06:04.523 --> 06:07.900
And editing, of course, the hybrid nature of being

132
06:07.900 --> 06:10.929
on prim, on location, in a studio, in the home,

133
06:10.929 --> 06:14.230
orchestrating that data, getting it to where it needs to be

134
06:14.230 --> 06:15.857
in a reasonable amount of time.

135
06:15.857 --> 06:19.150
You know, this is also driving the need to bring the desktop

136
06:19.150 --> 06:22.200
to the data or the desktop in the cloud.

137
06:22.200 --> 06:26.390
So accelerating the needs of common operating system

138
06:26.390 --> 06:29.100
and common applications to run directly in the cloud

139
06:29.100 --> 06:30.740
is accelerating.

140
06:30.740 --> 06:33.820
And a lot of challenges dealing with raw media costs,

141
06:33.820 --> 06:35.954
constantly requiring transcoding,

142
06:35.954 --> 06:40.753
very difficult to protect with any form of watermarking.

143-p
06:40.753 --> 06:44.100
Now with playback, we've seen a good evolution,

144
06:44.100 --> 06:46.285
obviously on the browsers, as we've seen,

145
06:46.285 --> 06:50.450
many video technologies accelerate with fragmented MP4s

146
06:50.450 --> 06:53.774
and low-latency streaming live is accelerating across

147
06:53.774 --> 06:57.150
this industry right now, but the need for higher bit rates,

148
06:57.150 --> 07:00.202
higher fidelity, 5.1 audio, et cetera,

149
07:00.202 --> 07:03.400
is definitely a higher requirement.

150
07:03.400 --> 07:05.600
Visual and forensic watermarking have always been

151
07:05.600 --> 07:07.310
fundamental to what we do.

152-p
07:07.310 --> 07:10.500
We used to be able to have a

153
07:10.500 --> 07:12.440
compiled container back in the days when Flash

154
07:12.440 --> 07:17.440
was semi-secure and allowed you to have a DRM

155
07:19.460 --> 07:22.260
protected stream with a client side overlay

156
07:22.260 --> 07:25.430
that allowed you to leverage things like CDNs

157
07:25.430 --> 07:28.280
for, you know, optimize, streaming.

158
07:28.280 --> 07:32.227
As we have lost that and WebAssembly

159
07:32.227 --> 07:35.500
has not really replaced it in its ability,

160
07:35.500 --> 07:37.768
from a security perspective, to create a secure container.

161
07:37.768 --> 07:41.875
It has required a lot of server-side watermarking to occur,

162
07:41.875 --> 07:43.930
which then of course

163
07:43.930 --> 07:46.561
creates more challenges with buffering.

164-p
07:46.561 --> 07:50.628
And VR 360, you know, just being able to play that back

165
07:50.628 --> 07:54.194
with DRM, being able to maintain security as we move

166
07:54.194 --> 07:59.000
into more of these virtual worlds is going to be critical.

167-p
07:59.000 --> 08:01.441
And then just for distribution, just offline tracking

168
08:01.441 --> 08:03.328
tends to come up a lot, the security,

169
08:03.328 --> 08:06.980
when things go offline, how can we keep

170
08:06.980 --> 08:10.480
some protection within the operating system or handoff

171
08:10.480 --> 08:11.948
between the browser and the operating system,

172
08:11.948 --> 08:13.995
being able to download folders

173
08:13.995 --> 08:16.180
so that you can maintain those structures,

174
08:16.180 --> 08:18.540
as we talked about the challenges on upload,

175
08:18.540 --> 08:20.956
and then just, you know, leveraging audio and AI analysis

176
08:20.956 --> 08:23.206
at scale, I think is going in the right direction

177
08:23.206 --> 08:26.270
and we'll be leveraging a lot more of that going forward.

178-p
08:26.270 --> 08:28.114
So I hope you found that useful,

179
08:28.114 --> 08:32.410
as some of the pipelines and tools used in the orchestration

180
08:32.410 --> 08:34.610
of a studio and some of the challenges we run into

181
08:34.610 --> 08:36.499
and yeah, hopefully we can all work together

182
08:36.499 --> 08:37.332
to make it great.
