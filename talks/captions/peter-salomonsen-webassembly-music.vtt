WEBVTT

1
00:00:01.970 --> 00:00:03.610
<v Peter>Hello, I'm Peter.</v>

2
00:00:03.610 --> 00:00:07.370
And I'm experimenting with creating music in

3
00:00:07.370 --> 00:00:08.880
the web browser.

4-p
00:00:08.880 --> 00:00:13.880
And what I want to show you here is a web application

5
00:00:13.940 --> 00:00:17.088
for creating music in the web browser.

6
00:00:17.088 --> 00:00:20.130
This video here is also being recorded

7
00:00:20.130 --> 00:00:21.610
in that same application.

8
00:00:21.610 --> 00:00:26.150
So it's a camera view here on the bottom right.

9
00:00:26.150 --> 00:00:28.550
And on the left side, here

10
00:00:28.550 --> 00:00:30.090
it is code

11
00:00:30.090 --> 00:00:32.620
for generating the music.

12-p
00:00:32.620 --> 00:00:35.620
So this is actually a live coding studio,

13
00:00:35.620 --> 00:00:38.130
where you have the notes to be played here

14
00:00:38.130 --> 00:00:41.646
in comments, and you have the durations

15
00:00:41.646 --> 00:00:43.610
and the velocities.

16
00:00:43.610 --> 00:00:45.520
And on the right side here

17
00:00:45.520 --> 00:00:48.660
is a language called assembly script,

18
00:00:48.660 --> 00:00:51.640
which compiles to WebAssembly.

19-p
00:00:51.640 --> 00:00:54.640
And what I have here is the instruments.

20
00:00:54.640 --> 00:00:57.960
So there are actually no recorded instruments here.

21
00:00:57.960 --> 00:01:02.540
It's just generated in real time and you have all the math

22
00:01:02.540 --> 00:01:05.990
and all the code here for generating the sound.

23-p
00:01:05.990 --> 00:01:07.830
So when I actually

24
00:01:09.384 --> 00:01:10.560
(playing note on keyboard)

25
00:01:10.560 --> 00:01:13.315
play here on my MIDI keyboard.

26
00:01:13.315 --> 00:01:16.232
(playing keyboard)

27
00:01:19.461 --> 00:01:24.410
The code here on the right side is running and calculating

28
00:01:24.410 --> 00:01:27.054
all the samples for the instruments in real time.

29
00:01:27.054 --> 00:01:30.304
(playing the keyboard)

30-p
00:01:34.140 --> 00:01:35.061
I have a string

31
00:01:35.061 --> 00:01:38.340
(string instrument notes playing)

32
00:01:38.340 --> 00:01:43.340
which you can actually see the code for down here.

33
00:01:43.410 --> 00:01:45.690
I'm not going to go into the code right now.

34
00:01:45.690 --> 00:01:48.215
That has to be another session.

35
00:01:48.215 --> 00:01:51.465
(playing the keyboard)

36-p
00:01:52.360 --> 00:01:56.794
You can create lots of interesting instruments here.

37
00:01:56.794 --> 00:02:00.877
(flute instrument notes playing)

38
00:02:02.980 --> 00:02:06.246
That's the flute and also have a drum here.

39
00:02:06.246 --> 00:02:08.890
(drum beat playing)

40-p
00:02:08.890 --> 00:02:13.120
And actually I have this leading beat that is recorded here

41
00:02:13.120 --> 00:02:15.429
so I can start playing it.

42
00:02:15.429 --> 00:02:18.679
(musical beat playing)

43-p
00:02:20.750 --> 00:02:24.326
Why not record something while I'm at it?

44
00:02:24.326 --> 00:02:28.909
(playing bass notes over musical beat)

45-p
00:02:47.020 --> 00:02:51.700
And what you just saw there was that after I recorded,

46
00:02:51.700 --> 00:02:54.470
it actually inserted the code here

47
00:02:56.381 --> 00:02:57.870
on the left side here.

48
00:02:57.870 --> 00:03:00.445
So you got all the notes I played

49
00:03:00.445 --> 00:03:04.600
and they did the durations and the velocities.

50-p
00:03:04.600 --> 00:03:09.600
So this is a full environment for creating music.

51
00:03:09.960 --> 00:03:13.340
You have recording and creating the instruments you got all you

52
00:03:13.340 --> 00:03:17.310
need here actually for creating a complete piece of music.

53-p
00:03:17.310 --> 00:03:22.310
But the very important thing for making this a pleasant

54
00:03:22.680 --> 00:03:26.794
experience to work with for a musician and a keyboard player

55
00:03:26.794 --> 00:03:29.738
(playing the keyboard)

56
00:03:29.738 --> 00:03:32.070
is that you actually get instant response

57
00:03:32.070 --> 00:03:35.831
from the MIDI keyboard when you play.

58
00:03:35.831 --> 00:03:39.850
And it's just a matter of milliseconds.

59
00:03:39.850 --> 00:03:42.930
If it takes like 10 milliseconds,

60
00:03:42.930 --> 00:03:44.900
then it's too much.

61-p
00:03:44.900 --> 00:03:46.580
On this Mac that I have here,

62
00:03:46.580 --> 00:03:49.110
that's no problem. It just works as it should.

63
00:03:49.110 --> 00:03:52.220
It's just a low end MacBook air.

64
00:03:52.220 --> 00:03:55.540
It's not problem at all, but it's a challenge

65
00:03:55.540 --> 00:03:57.083
across systems.

66
00:03:57.920 --> 00:03:59.590
This latency.

67-p
00:03:59.590 --> 00:04:03.730
For example, if you go to a windows computer,

68
00:04:03.730 --> 00:04:05.870
you generally get good performance,

69
00:04:05.870 --> 00:04:09.980
but you get this lag of 10 milliseconds,

70
00:04:09.980 --> 00:04:14.980
which is really too much to have a good playing experience.

71
00:04:16.940 --> 00:04:21.870
It's okay for listening, but maybe also for gameplay.

72
00:04:21.870 --> 00:04:24.500
But actually when you are using this as a musician

73
00:04:24.500 --> 00:04:27.440
you need that instant response.

74-p
00:04:27.440 --> 00:04:29.570
And also you see that, for example,

75
00:04:29.570 --> 00:04:33.470
a laptop running on battery. Also, this is with Windows.

76
00:04:33.470 --> 00:04:36.350
It's not problem with the Mac.

77
00:04:36.350 --> 00:04:40.450
Then you actually hear that the sound is degraded.

78
00:04:40.450 --> 00:04:41.980
There are clicks, there are...

79
00:04:44.488 --> 00:04:48.559
sometimes it just stops and it's not the experience

80
00:04:48.559 --> 00:04:49.570
it should be.

81
00:04:49.570 --> 00:04:53.808
So, these are things that really has to be improved

82
00:04:53.808 --> 00:04:57.738
in order to make this, because the possibilities are

83
00:04:57.738 --> 00:05:00.020
very exciting here.

84
00:05:00.020 --> 00:05:03.660
Just, this is a very simple application,

85
00:05:03.660 --> 00:05:08.540
but you could create full replacements for what we

86
00:05:08.540 --> 00:05:12.720
have in desktop apps today for creating music.

87-p
00:05:12.720 --> 00:05:15.480
I really think there are some interesting possibilities

88
00:05:15.480 --> 00:05:20.093
there when you expand that area onto the web.

89-p
00:05:21.890 --> 00:05:25.150
And also across browsers,

90
00:05:25.150 --> 00:05:27.890
for example, in Firefox,

91
00:05:27.890 --> 00:05:30.695
you don't have the MIDI support.

92
00:05:30.695 --> 00:05:34.313
So it's a very good AudioWorklet implementation.

93
00:05:34.313 --> 00:05:37.230
Audioworklet is the technology that

94
00:05:38.115 --> 00:05:42.430
can bin this WebAssembly code to the Web Audio API.

95
00:05:42.430 --> 00:05:46.190
And makes it possible to have this low latency,

96
00:05:46.190 --> 00:05:48.760
this instant response when you play.

97
00:05:48.760 --> 00:05:50.830
So this works very good on Firefox,

98
00:05:50.830 --> 00:05:52.900
but you don't have a MIDI connectivity.

99
00:05:52.900 --> 00:05:56.220
So you have to find other solutions for connecting

100
00:05:56.220 --> 00:05:57.933
a MIDI keyboard to Firefox.

101-p
00:05:58.930 --> 00:06:03.762
And this is also important in order to get this fully

102
00:06:03.762 --> 00:06:08.210
usable experience is that you have this

103
00:06:08.210 --> 00:06:12.053
working across browsers.

104-p
00:06:14.502 --> 00:06:17.380
But other than that, I think this is

105
00:06:17.380 --> 00:06:21.560
very interesting technology.

106
00:06:21.560 --> 00:06:25.280
I've created quite a bit of music with it so far.

107
00:06:25.280 --> 00:06:29.180
I use it for all my music now, and I think it's great.

108
00:06:29.180 --> 00:06:33.900
I really hope that we will see this stable and

109
00:06:33.900 --> 00:06:37.510
performant and you get this low latency

110
00:06:37.510 --> 00:06:41.143
across all browsers or platforms.

111-p
00:06:42.460 --> 00:06:47.460
That's the point I really want to make today.

112
00:06:47.490 --> 00:06:52.490
And I hope can get some attention in the future.

113
00:06:52.620 --> 00:06:53.883
Thank you for watching.

